# NeoBridge Payment Service Configuration
spring:
  application:
    name: neobridge-payment-service
  
  profiles:
    active: dev
  
  datasource:
    url: jdbc:postgresql://postgres:5432/neobridge_dev
    username: neobridge_user
    password: neobridge_password
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  redis:
    host: redis
    port: 6379
    database: 1
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms
  
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: neobridge-payment-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false

server:
  port: 8083
  servlet:
    context-path: /payments

# Security Configuration
security:
  jwt:
    secret: neobridge-payment-service-jwt-secret-key-2024
    expiration: 86400000  # 24 hours
    refresh-expiration: 604800000  # 7 days
  
  password:
    encoder:
      strength: 12

# Logging Configuration
logging:
  level:
    com.neobridge.payment: DEBUG
    org.springframework.security: DEBUG
    org.springframework.kafka: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Payment Service Specific Configuration
neobridge:
  payment:
    # Payment ID generation
    payment-id:
      prefix:
        domestic: "DOM"
        international: "INT"
        sepa: "SEPA"
        swift: "SWIFT"
        card: "CARD"
        crypto: "CRYPTO"
        bill: "BILL"
        loan: "LOAN"
        investment: "INV"
        subscription: "SUB"
        recurring: "REC"
        instant: "INST"
        batch: "BATCH"
      length: 16
      separator: "-"
    
    # Fee structure
    fees:
      domestic:
        percentage: 0.001  # 0.1%
        fixed: 0.50
        currency: "EUR"
      international:
        percentage: 0.005  # 0.5%
        fixed: 5.00
        currency: "EUR"
      sepa:
        percentage: 0.0005  # 0.05%
        fixed: 0.25
        currency: "EUR"
      swift:
        percentage: 0.01   # 1%
        fixed: 25.00
        currency: "EUR"
      card:
        percentage: 0.025  # 2.5%
        fixed: 0.30
        currency: "EUR"
      crypto:
        percentage: 0.01   # 1%
        fixed: 2.00
        currency: "EUR"
    
    # Processing limits
    limits:
      domestic:
        min: 0.01
        max: 100000.00
        daily: 1000000.00
        monthly: 10000000.00
      international:
        min: 10.00
        max: 1000000.00
        daily: 5000000.00
        monthly: 50000000.00
      sepa:
        min: 0.01
        max: 999999999.99
        daily: 10000000.00
        monthly: 100000000.00
      swift:
        min: 100.00
        max: 10000000.00
        daily: 10000000.00
        monthly: 100000000.00
    
    # Processing times
    processing:
      domestic:
        instant: true
        standard: "2-4 hours"
        max: "24 hours"
      international:
        instant: false
        standard: "1-3 business days"
        max: "5 business days"
      sepa:
        instant: false
        standard: "1 business day"
        max: "2 business days"
      swift:
        instant: false
        standard: "1-3 business days"
        max: "5 business days"
    
    # Compliance settings
    compliance:
      aml:
        enabled: true
        threshold: 10000.00
        currency: "EUR"
      kyc:
        enabled: true
        required: true
      fraud:
        enabled: true
        scoring:
          low: 0-30
          medium: 31-70
          high: 71-100
        threshold: 70
    
    # Retry configuration
    retry:
      max_attempts: 3
      initial_delay: 300000  # 5 minutes
      max_delay: 3600000     # 1 hour
      multiplier: 2.0
    
    # Scheduling
    scheduling:
      scheduled_payments:
        cron: "0 * * * * *"  # Every minute
        enabled: true
      failed_retries:
        cron: "0 */5 * * * *"  # Every 5 minutes
        enabled: true
      compliance_checks:
        cron: "0 0 * * * *"  # Every hour
        enabled: true
      fraud_checks:
        cron: "0 */15 * * * *"  # Every 15 minutes
        enabled: true

# Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 300000  # 5 minutes
      cache-null-values: false
    cache-names:
      - payments
      - payment-fees
      - compliance-rules
      - fraud-rules
